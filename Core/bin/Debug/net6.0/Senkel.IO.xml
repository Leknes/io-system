<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Senkel.IO</name>
    </assembly>
    <members>
        <member name="M:Senkel.IO.FileInfoExtensions.CreateParentDirectory(System.IO.FileInfo)">
            <summary>
            Creates all directories and sub-directories in the path of the parent directory unless they already exist.
            </summary>
            <param name="fileInfo">The file of which the parent directory will be created.</param>
        </member>
        <member name="T:Senkel.IO.Paths.IDirectoryPath">
            <summary>
            Represents the path of a directory.
            </summary>
        </member>
        <member name="P:Senkel.IO.Paths.IDirectoryPath.Value">
            <summary>
            The path of the directory.
            </summary>
        </member>
        <member name="T:Senkel.IO.Paths.ISystemPath">
            <summary>
            Represents a path of a directory or to a file.
            </summary>
        </member>
        <member name="P:Senkel.IO.Paths.ISystemPath.Value">
            <summary>
            The path of the corresponding directory or path.
            </summary>
        </member>
        <member name="T:Senkel.IO.Serialization.IFileDeserializer">
            <summary>
            Represents a deserializer that is capable of deserializing objects from files.
            </summary>
        </member>
        <member name="M:Senkel.IO.Serialization.IFileDeserializer.Deserialize``1(System.String)">
            <summary>
            Deserializes an object of the specified type from the file at the specified path.
            </summary>
            <typeparam name="T">The type of the object to deserialize.</typeparam>
            <param name="path">The path of the file to deserialize from.</param>
            <returns>The deserializede object.</returns>
        </member>
        <member name="M:Senkel.IO.Serialization.IFileDeserializer.Deserialize(System.String,System.Type)">
            <summary>
            Deserializes an object of the specified type from the file at the specified path.
            </summary>
            <param name="type">The type of the object to deserialize.</param>
            <param name="path">The path of the file to deserialize from.</param>
            <returns>The deserializede object.</returns>
        </member>
        <member name="T:Senkel.IO.Serialization.IFileSerializationFacade">
            <summary>
            Represents a facade that consists of a file serializer and a file deserializer. Both serializers should handle input paths in the same way.
            </summary>
        </member>
        <member name="P:Senkel.IO.Serialization.IFileSerializationFacade.Serializer">
            <summary>
            The serializer of the facade.
            </summary>
        </member>
        <member name="P:Senkel.IO.Serialization.IFileSerializationFacade.Deserializer">
            <summary>
            The deserializer of the facade.
            </summary>
        </member>
        <member name="T:Senkel.IO.Serialization.IFileSerializer">
            <summary>
            Respresents a serializer that is capable of serializing objects into files.
            </summary>
        </member>
        <member name="M:Senkel.IO.Serialization.IFileSerializer.Serialize(System.String,System.Object)">
            <summary>
            Serializes the specified value into the file at the given path.
            </summary>
            <param name="path">The path of the file.</param>
            <param name="value">The value to serialize.</param>
        </member>
        <member name="T:Senkel.IO.Terminals.IDirectoryTerminal">
            <summary>
            Grants access on directory-related system operations.
            </summary>
        </member>
        <member name="M:Senkel.IO.Terminals.IDirectoryTerminal.Expose(System.String)">
            <summary>
            Exposes the instance methods for creating, deleting and other directory-related functionality of the directory based on the input path.
            </summary>
            <param name="path">The path of the directory to expose.</param>
            <returns>The <see cref="T:System.IO.DirectoryInfo"/> object that exposes the directory.</returns>
        </member>
        <member name="M:Senkel.IO.Terminals.IDirectoryTerminal.Derive(System.Object)">
            <summary>
            Creates a new <see cref="T:Senkel.IO.Paths.IDirectoryPath"/> object that is based on the input path.
            </summary>
            <param name="path">The path of the <see cref="T:Senkel.IO.Paths.IDirectoryPath"/> object to derive.</param>
            <returns>The created <see cref="T:Senkel.IO.Paths.IDirectoryPath"/> instance.</returns>
        </member>
        <member name="T:Senkel.IO.Terminals.IFileTerminal">
            <summary>
            Grants access on file-related system operations.
            </summary>
        </member>
        <member name="M:Senkel.IO.Terminals.IFileTerminal.Expose(System.String)">
            <summary>
            Exposes the instance methods for creating, deleting and other file-related functionality of the file based on the input path.
            </summary>
            <param name="path">The path of the file to expose.</param>
            <returns>The <see cref="T:System.IO.FileInfo"/> object that exposes the file.</returns>
        </member>
        <member name="M:Senkel.IO.Terminals.IFileTerminal.Create(System.String,System.Int32)">
            <summary>
            Creates or overwrites a file at the specified path, specifying a buffer size.
            </summary>
            <param name="path">The path of the file to create.</param>
            <param name="bufferSize">The number of bytes buffered for reads and writes to the created file.</param>
            <returns>A <see cref="T:System.IO.FileStream"/> with the specified buffer size that provides read/write access to the created file.</returns> 
        </member>
        <member name="M:Senkel.IO.Terminals.IFileTerminal.OpenWrite(System.String)">
            <summary>
            Opens an existing file or creates a new file for writing at the specified path.
            </summary>
            <param name="path">The path of the file..</param>
            <returns>An unshared <see cref="T:System.IO.FileStream"/> object based on the specified path.</returns>
        </member>
        <member name="M:Senkel.IO.Terminals.IFileTerminal.OpenRead(System.String)">
            <summary>
            Opens an existing file for reading.
            </summary>
            <param name="path">The path of the file.</param>
            <returns>A read-only <see cref="T:System.IO.FileStream"/> object based on the specified path.</returns>
        </member>
        <member name="T:Senkel.IO.Terminals.IPathTerminal">
            <summary>
            Represents a manager that is capable of managing files or directories based on their paths.
            </summary>
        </member>
        <member name="M:Senkel.IO.Terminals.IPathTerminal.Expose(System.String)">
            <summary>
            Exposes the instance methods for creating, deleting and other system-related functionality based on the input path.
            </summary>
            <param name="path">The path of the file or directory to expose.</param>
            <returns>A <see cref="T:System.IO.FileSystemInfo"/> object that is based on the input path.</returns>
        </member>
        <member name="M:Senkel.IO.Terminals.IPathTerminal.Derive(System.Object)">
            <summary>
            Creates a new <see cref="T:Senkel.IO.Paths.ISystemPath"/> object that is based on the specified path.
            </summary>
            <param name="path">The path to derive an <see cref="T:Senkel.IO.Paths.ISystemPath"/> object from.</param>
            <returns>The created <see cref="T:Senkel.IO.Paths.ISystemPath"/> object.</returns>
        </member>
        <member name="M:Senkel.IO.Terminals.IPathTerminal.Delete(System.String)">
            <summary>
            Deletes the file or directory at the specified path.
            </summary>
            <param name="path">The used path.</param>
        </member>
        <member name="M:Senkel.IO.Terminals.IPathTerminal.Exists(System.String)">
            <summary>
            Determines if a file or directory exists at the specified path.
            </summary>
            <param name="path">The path to check.</param>
            <returns>If the file or directory exists.</returns>
        </member>
        <member name="M:Senkel.IO.Terminals.IPathTerminal.Move(System.String,System.String)">
            <summary>
            Moves the file or directory at the specified source path to the specified destination path.
            This method may also be used for renaming a file or directory.
            </summary>
            <param name="sourcePath">The source path of the file or directory to move.</param>
            <param name="destinationPath">Where to move the file or directory.</param>
        </member>
    </members>
</doc>
